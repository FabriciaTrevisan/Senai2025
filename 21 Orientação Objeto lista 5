Main-------------------------
import entities.Contribuinte;
import entities.PessoaFisica;
import entities.PessoaJuridica;

import java.sql.SQLOutput;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        List<Contribuinte> contribuintes = new ArrayList<>();

        while (true) {
            System.out.println("Digite sua opção:");
            System.out.println("1 - informar PF");
            System.out.println("2 - informar PJ");
            System.out.println("3 - exibir dados de imposto");
            System.out.println("4 - sair");
            int opcao = sc.nextInt();
            sc.nextLine();
            switch (opcao) {
                case 1:
                    System.out.println("**Cadastrar PF**");
                    System.out.print("Nome de PF: ");
                    String nome = sc.nextLine();
                    System.out.print("Renda: R$");
                    double renda = sc.nextDouble();
                    System.out.print("Gasto com saúde: R$");
                    double saudeGasto = sc.nextDouble();
                    contribuintes.add(new PessoaFisica(nome, renda, saudeGasto));

                    break;
                case 2:
                    System.out.println("**Cadastrar PJ**");
                    System.out.print("Nome de PJ: ");
                    String nomepj = sc.nextLine();
                    System.out.print("Renda: R$");
                    double rendapj = sc.nextDouble();
                    System.out.print("Número de funcionários: ");
                    int numFuncionario = sc.nextInt();
                    contribuintes.add(new PessoaJuridica(nomepj, rendapj, numFuncionario));
                    break;
                case 3:
                    double soma=0;
                    System.out.println("**Imposto Pago**");
                    for (Contribuinte contribuinte : contribuintes) {
                        System.out.println(contribuinte.getNome() + " : R$" + contribuinte.calcularImposto());
                        soma += contribuinte.calcularImposto();
                    }

                    System.out.println("Soma Imposto: " + String.format("%.2f", soma));
                    break;
                case 4:
                    System.out.println("sair");
                    return;
                default:
                    System.out.println("Escolha uma opção válida");
            }
        }
    }
}
Contribuinte--------------------------------
package entities;

public abstract class Contribuinte {
    private String nome;
    private Double rendaAnual; //protected também funciona ao invés de private, no método só não usa o super

    public Contribuinte(String nome, Double rendaAnual) {
        this.nome = nome;
        this.rendaAnual = rendaAnual;
    }

    public String getNome() {
        return nome;
    }

    public Double getRendaAnual() {
        return rendaAnual;
    }

    public abstract Double calcularImposto();
}
PessoaFisica---------------------------------------
package entities;

public final class PessoaFisica extends Contribuinte {

    private Double saudeGasto;

    public PessoaFisica(String nome, Double rendaAnual, Double saudeGasto) {
        super(nome, rendaAnual);
        this.saudeGasto = saudeGasto;
    }

    public Double getSaudeGasto() {
        return saudeGasto;
    }

    @Override
    public Double calcularImposto() {
        double renda = super.getRendaAnual();
        double imposto;

        if (renda < 20000){
            imposto = renda * 0.15;

        }else {
            imposto = renda * 0.25;
        }
        if (saudeGasto == 0){
            return imposto;
        } else {
            return imposto - saudeGasto/2;
        }
    }
}
PessoaJuridica-----------------------------------------
package entities;

public final class PessoaJuridica extends Contribuinte {
    private int qtdFuncionarios;

    public PessoaJuridica(String nome, Double rendaAnual, int qtdFuncionarios) {
        super(nome, rendaAnual);
        this.qtdFuncionarios = qtdFuncionarios;
    }

    public int getQtdFuncionarios() {
        return qtdFuncionarios;
    }

    @Override
    public Double calcularImposto() {
        double imposto=0;
        double renda = super.getRendaAnual();

        if (qtdFuncionarios <= 10){
            imposto = renda * 0.16;

            return imposto;
        } else {
            imposto = renda * 0.14;
            return imposto;
        }
    }
}
