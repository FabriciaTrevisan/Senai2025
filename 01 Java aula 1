Programação em Java

Prof Gustavo Irio Buss

Algoritmo - sequência ordenadas de finitas de instruções para se resolver um problema. Portanto algorítmo é um programa executado pelo computador.

IDE > software para editar e testar >>
      C/C++: Code Blocks; 
      Java: Eclipse/NetBeans;
Compilador > software que transforma o código fonte em código objeto
Gerador de código ou máquina virtual > software q permite q o programa seja executado

*Java e C# fazem o software rodar em diversos sistemas operacionais.

**Tudo dentro do java tem que etar dentro de uma class**

>> Baixar JDK (Java SE Developer) e algum IDE <<

*** LISTA 1 ***

1 – Algoritmo é um conjunto ordenado de finitas regras para solucionar problemas. Exemplos:  receitas, procedimentos para executação de tarefas, instruções de GPS.
2 - É como se fosse o idioma utilizado para criação de códigos de progamação. A linguagem de programação depende do sistema utilizado e cada linguagem tem expressões e comandos próprios.
3 - IDEs para programar em java: Eclipse, NetBeans e VScode
4 - A linguagem compilada é feita para um determinado sistema operacional, já a linguagem interpretada é capaz de ser utilizada em diferentes sistemas operacionais sem necessidade de nova compilação.
5 - Compilador traduz um código de linguagem humana para linguagem de máquina, transformando-o em um programa.
6 - Exemplos de linguagem compilada:  C, o C++, o Erlang, o Haskell, o Rust e o Go - estas linguagens precisam ser compiladas manualmente primeiro e precisam passar por uma reestruturação cada vez que precisar aplicar uma mudança. Elas são específicas para um SO.
7 - Vantagens da liguagem interpretada: mais simples de fazer atualizações e alterações no cógigo; tamanho de programa reduzido ;
7 - Desvantagens da liguagem interpretada: mais lenta que a compilada;  precisa do interpretador para rodar;
8 - Desenvolvimento e prototipagem rápidos, Depuração mais fácil, Portabilidade e flexibilidade;
9 -  Abordagem híbrida é quando usa a linguagem compilada e a interpretada, como em java.
10 - Bytecode é um formato de código intermediário entre o código fonte, o texto que o programador consegue manipular, e o código de máquina, que o computador consegue executar. É o bytecode que a JVM consegue interpretar e faz com que o programa seja independente de SO.
11 - A máquina virtual é mais rápida e independe do sistema operacional;
12 - Java é uma linguagem híbrida, ou seja, utiliza uma combinação de liguagem compilada com interpretada. Pois é necessário  compilar o arquivo.java gerando um arquivo.class (bytecodes) e, ao mesmo tempo, a JVM interpreta esse arquivo.class para uma linguagem que o computador possa entender.
13 - JVM é um software que simula uma máquina virtual, exclusivo para java, que faz com que o programa rode independente do sistema operacional;
14 -  1 - desligar disjuntor; 
      2 - pegar a escada e posicioná-la embaixo da lâmpada a ser retirada; 
      3 - pegar a lâmpada nova;
      4 - subir a escada e retirar a lâmpada queimada;
      5 - instalar a lâmpada nova;
      6 - descer da escada;
      7 - ligar o disjuntor;

--------------------------------------------------------------------------------------------------------------------------------
AULA 2
Sintaxe para declarar variáveis: 
<tipo> <nome> = <valor inicial>;

Exemplos:
int idade = 25
double altura = 1.68
char sexo = 'F'

TIPOS PRIMITIVOS: dados básicos da linguagem Java.
---------------------------------------------------------------------------------------------------------------------------------
***OPERADORES COMPARATIVOS***
> maior
>= maior e igual
< menor
<= menor e igual
== igual
!= diferente
&& e
|| ou
! não



***CONDICIONAL***

//Crie um algoritmo para fazer a leitura e adição de dois valores numéricos, caso o valor somado seja maior que
//10, efetue a e mostre o resultado.
        
      System.out.println("Digite o primeiro número: ");
        int num1 = sc.nextInt();
        System.out.println("Digite o segundo número: ");
        int num2 = sc.nextInt();
        int soma = num1 + num2;

        if (soma > 10){
            System.out.println("O valor da soma é " + soma);

        }
        System.out.println("Fim do código!");


***CONDICIONAL ENCADEADA OU COMPOSTA (if/else)

//Crie um algoritmo para fazer a leitura de dois valores numéricos e efetue a adição. Caso o valor somado seja
//maior ou igual a 10, este deve ser apresentado somando-se a ele mais 5. Caso o valor somado não seja maior ou
//igual a 10, este deve ser apresentado subtraindo-se 7.

System.out.println("Digite o primeiro número: ");
        int num1 = sc.nextInt();
        System.out.println("Digite o segundo número: ");
        int num2 = sc.nextInt();
        int soma = num1 + num2;

        if (soma > 10){
            soma = soma + 5;
            System.out.println("O valor da soma é " + soma);

        } else {
            soma = soma - 7;
            System.out.println("O valor da subtração é " + soma);
        }
        System.out.println("Fim do código!");

//Elabore um programa que efetue o cálculo do reajuste de salário de um funcionário. Considere as seguintes possibilidades:
//Se o salário do funcionário for menor que R$500,00, ele receberá reajuste de 15%;
//Se o salário for maior ou igual a R$500,00, mas menor ou igual a R$1000,00, seu reajuste será de 10%;
//Se o salário for maior que R$1000,00, o reajuste deverá ser de 5%.

        System.out.println("digite seu salário");
        double salarioAtual = sc.nextDouble();
        double salarioFinal;

        if (salarioAtual < 500){
            salarioFinal = salarioAtual * 1.15;

        } else if (salarioAtual <= 1000) {
            salarioFinal = salarioAtual * 1.10;

        } else {
            salarioFinal = salarioAtual * 1.05;
        }
        System.out.printf("O valor do salário antigo é R$ %.2f.", salarioAtual);
        System.out.printf("%nO valor do salário final será R$ %.2f.", salarioFinal);


//Crie um algoritmo que fará a leitura de dois parâmetros para dizer se poderá ir à praia ou não. Para você ir à
//praia é necessário que as duas condições sejam verdadeiras (ter sol e não ter prova). Se uma delas falhar, você
//não poderá ir à praia.


        int fazSol, temProva;
        System.out.println("Está sol? (1 - sim / 0 - não)");
        fazSol = sc.nextInt();
        System.out.println("Tem prova? (1 - sim / 0 - não)");
        temProva = sc.nextInt();

        if (fazSol == 1 && temProva == 0){
            System.out.println("Eba, vamos para praia!!!");
        } else{
            System.out.println("Que peninha, hoje não tem praia.");
        }










