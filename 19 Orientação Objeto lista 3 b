MAIN--------------
import entities.Cliente;
import entities.Pedido;
import entities.Restaurante;

import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        //precisa criar os objetos (popular os objetos)

        Restaurante restaurante =new Restaurante("Pizza Hut", "Italiana");
        Restaurante restaurante1=new Restaurante("Sushi House", "Oriental");

        Pedido pedido1=new Pedido(restaurante, 100);
        Pedido pedido2=new Pedido(restaurante, 120);

        Cliente cliente=new Cliente("Gustavo", "43989898989");

        cliente.adicionarPedido(pedido1);
        cliente.adicionarPedido(pedido2);

        System.out.println(cliente.exibirPedidos());
        pedido1.atualizarStatus();
        System.out.println(cliente.exibirPedidos());

        sc.close();
    }
}

StatusPedido-------------------------------------------
package entities.enums;

public enum StatusPedido {
    REALIZADO,
    PREPARANDO,
    A_CAMINHO,
    ENTREGUE;
}
Restaurante--------------------------------------------
package entities;

public class Restaurante {
    private String nome;
    private String tipoCulinaria;


    //construtor
    public Restaurante(String nome, String tipoCulinaria) {
        this.nome = nome;
        this.tipoCulinaria = tipoCulinaria;
    }

    //getters
    public String getNome() {
        return nome;
    }
    public String getTipoCulinaria() {
        return tipoCulinaria;
    }

}
Pedido--------------------------------------------------
package entities;

import entities.enums.StatusPedido;

public class Pedido {
    private Restaurante restaurante;
    private double valorTotal;
    private StatusPedido status;

    //construtor
    public Pedido(Restaurante restaurante, double valorTotal) {
        this.restaurante = restaurante;
        this.valorTotal = valorTotal;
        this.status = StatusPedido.REALIZADO;
    }


    public Restaurante getRestaurante() {
        return restaurante;
    }
    public double getValorTotal() {
        return valorTotal;
    }
    public StatusPedido getStatusPedido() {
        return status;
    }


    public void atualizarStatus(){
        switch (status){
            case REALIZADO -> this.status = StatusPedido.PREPARANDO;
            case PREPARANDO -> this.status = StatusPedido.A_CAMINHO;
            case A_CAMINHO -> this.status = StatusPedido.ENTREGUE;
            case ENTREGUE -> System.out.println("O pedido já foi entregue!");
            }
        }

    public void exibirPedido (int valor){ //o valor será o número do pedido
        //System.out.println("Pedido: \n");
        System.out.println("Restaurante: " + restaurante.getNome() + " (" + restaurante.getTipoCulinaria() + ").");
        System.out.println("Valor: R$" + valorTotal);
        System.out.println("Status do pedido: " + status);

    }

    @Override
    public String toString() {
        return "Pedido {" +
                "restaurante =" + restaurante.getNome() +
                ", valorTotal =" + valorTotal +
                ", status =" + status +
                '}';
    }
}
Cliente---------------------------------------------------------
package entities;

import java.util.ArrayList;
import java.util.List;

public class Cliente {

    private String nome;
    private String telefone;
    private List<Pedido> pedidos;

    public Cliente(String nome, String telefone) {
        this.nome = nome;
        this.telefone = telefone;
        this.pedidos=new ArrayList<>();
    }

    public String getNome() {
        return nome;
    }

    public String getTelefone() {
        return telefone;
    }

    public Cliente(List<Pedido> pedidos) {
        this.pedidos = pedidos;
    }

    public void adicionarPedido(Pedido pedido){ //estou criando uma variável, precisa informar a Classe e a variável
        this.pedidos.add(pedido);               //usa pedidos pq é o que eu declarei acima, dentro da lista.

        System.out.println("Pedido adicionado com sucesso!");
    }

    public String exibirPedidos(){
        StringBuilder sb = new StringBuilder();
        sb.append("\nCLIENTE: \n");
        sb.append(this.nome).append(" | tel: ").append(this.telefone).append("\n");
        sb.append("PEDIDOS: \n"); //agora quero printar os valores do array:
        for (int i = 0; i < pedidos.size(); i++) { //usa .size para pegar até o último item
            sb.append("- Pedido #").append(i+1).append(pedidos.get(i).toString()).append("\n"); //para chamar os pedidos, vou usar outra classe, por isso preciso usar o .get.

        }
        return sb.toString(); //nesse momento o sistema transforma tudo em texto

    }

}
